import React from 'react';
import 'antd/dist/antd.css';
import {Typography, Carousel} from 'antd';

const {Paragraph, Text, Title} = Typography;

export default class OOP extends React.Component {
    render() {
        return (
            <Typography>
                <Paragraph style={{fontSize: 20}}>
                    <Text strong>
                        Объектно-ориентированное программирование (ООП)
                    </Text>
                    - методология программирования, основанная на представлении программы в виде совокупности объектов,
                    каждый из которых является экземпляром определенного класса, а классы образуют иерархию
                    наследования.
                </Paragraph>
                <Carousel>
                    <div>
                        <Paragraph style={{
                            padding: 30,
                            fontSize: 20,
                            height: 160,
                            color: '#fff',
                            background: '#364d79',
                        }}><h4 style={{color: "white"}}>Наследование</h4>
                            механизм, который позволяет описать новый класс на основе существующего (родительского).
                            При этом свойства и функциональность родительского класса заимствуются новым классом.
                        </Paragraph>
                    </div>
                    <div>
                        <Paragraph style={{
                            padding: 30,
                            fontSize: 20,
                            height: 160,
                            color: '#fff',
                            background: '#364d79',
                        }}><h4 style={{color: "white"}}>Абстракция</h4>
                            позволяет вынести общие свойства и методы и абстрагироваться от конкретной реализации
                        </Paragraph>
                    </div>
                    <div>
                        <Paragraph style={{
                            padding: 30,
                            fontSize: 20,
                            height: 160,
                            color: '#fff',
                            background: '#364d79',
                        }}><h4 style={{color: "white"}}>Инкапсуляция</h4>
                            ограничение доступа к данным и возможностям их изменения
                        </Paragraph>
                    </div>
                    <div>
                        <Paragraph style={{
                            padding: 30,
                            fontSize: 20,
                            height: 160,
                            color: '#fff',
                            background: '#364d79',
                        }}><h4 style={{color: "white"}}>Полиморфизм</h4>
                            <ul>
                                <li>
                                    <Text style={{color: "white"}} strong>динамический </Text>
                                    - позднее связывание во время выполнения (переопределение метода)
                                </li>
                                <li>
                                    <Text style={{color: "white"}} strong>статический </Text>
                                    (static) - ранее связывание во время компиляции (перегрузка метода - одинаковое название разные параметры)
                                </li>
                            </ul>
                        </Paragraph>
                    </div>
                </Carousel>
                <Title level={2}>Объект и класс</Title>
                <Paragraph style={{fontSize: 20}}>
                    Мир, в котором мы живем, состоит из объектов.
                    Если мы посмотрим вокруг, то увидим, что нас окружают дома, деревья, автомобили, мебель, посуда,
                    компьютеры.
                    Все эти предметы являются объектами, и каждый из них обладает набором определенных характеристик,
                    поведением и назначением.
                </Paragraph>
                <Paragraph style={{fontSize: 20}}>
                    Мы привыкли к объектам, и мы их используем всегда для вполне конкретных целей.
                    Например, если нам необходимо доехать до работы, мы пользуемся автомобилем, если захотим поесть –
                    посудой,
                    а если отдохнуть – нам понадобится удобный диван.
                </Paragraph>
                <Paragraph style={{fontSize: 20}}>
                    Человек привык мыслить объектно для решения задач в повседневной жизни.
                    Это послужило одной из причин использования объектов в программировании,
                    а такой подход к созданию программ назвали объектно-ориентированным.
                </Paragraph>
                <Paragraph style={{fontSize: 20}}>
                        Представьте, что вы разработали новую модель телефона и хотите наладить её серийное
                        производство.
                        Как разработчик телефона, вы знаете для чего он нужен, как он будет функционировать, и из каких
                        деталей он будет состоять (корпус, микрофон, динамик, провода, кнопки и т.д.).
                        При этом только вы знаете, как соединить эти детали.
                </Paragraph>
                <Paragraph style={{fontSize: 20}}>
                    Однако вы не планируете выпускать телефоны лично, для этого у вас есть целый штат работников.
                    Чтобы вам не пришлось каждый раз объяснять, как соединить детали телефона, и чтобы все телефоны при
                    производстве получались одинаковыми,
                    прежде чем начать их выпуск, вам понадобиться сделать чертеж в виде описания устройства телефона.
                    <Text strong>
                        В ООП такое описание, чертеж, схема или шаблон называется классом, из которого при выполнении
                        программы создается объект.
                    </Text>
                </Paragraph>
                <Paragraph style={{fontSize: 20}}>
                    <Text strong>Класс</Text> — это описание еще не созданного объекта, как бы общий шаблон, состоящий
                    из полей, методов и конструктора,
                    а объект – экземпляр класса, созданный на основе этого описания.
                </Paragraph>
            </Typography>)
    }
}